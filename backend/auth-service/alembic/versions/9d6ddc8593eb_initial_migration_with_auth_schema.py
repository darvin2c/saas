"""Initial migration with auth schema

Revision ID: 9d6ddc8593eb
Revises: 
Create Date: 2025-06-19 16:34:57.817317

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9d6ddc8593eb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Crear el esquema auth si no existe
    op.execute('CREATE SCHEMA IF NOT EXISTS auth')
    op.create_table('permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resource', sa.String(length=50), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='auth'
    )
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True, schema='auth')
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('domain', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='auth'
    )
    op.create_index(op.f('ix_tenants_domain'), 'tenants', ['domain'], unique=True, schema='auth')
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('reset_password_token', sa.String(length=255), nullable=True),
    sa.Column('reset_password_expires', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='auth'
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True, schema='auth')
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_system_role', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['auth.tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='auth'
    )
    op.create_index(op.f('ix_roles_tenant_id'), 'roles', ['tenant_id'], unique=False, schema='auth')
    op.create_table('role_permissions',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth.permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['auth.roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id'),
    schema='auth'
    )
    op.create_table('user_tenant_roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.Column('assigned_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['auth.users.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['auth.roles.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['auth.tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['auth.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'tenant_id', name='unique_user_tenant'),
    schema='auth'
    )
    op.create_index(op.f('ix_user_tenant_roles_role_id'), 'user_tenant_roles', ['role_id'], unique=False, schema='auth')
    op.create_index(op.f('ix_user_tenant_roles_tenant_id'), 'user_tenant_roles', ['tenant_id'], unique=False, schema='auth')
    op.create_index(op.f('ix_user_tenant_roles_user_id'), 'user_tenant_roles', ['user_id'], unique=False, schema='auth')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_tenant_roles_user_id'), table_name='user_tenant_roles')
    op.drop_index(op.f('ix_user_tenant_roles_tenant_id'), table_name='user_tenant_roles')
    op.drop_index(op.f('ix_user_tenant_roles_role_id'), table_name='user_tenant_roles')
    op.drop_table('user_tenant_roles')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_roles_tenant_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tenants_domain'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
